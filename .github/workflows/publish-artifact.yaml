name: execute-publish-artifact

on:
  workflow_call:
    secrets:
      SECRET_GITHUB_TOKEN:
        description: ''
        required: true
    inputs:
      repository-package:
        required: true
        type: string
        description: 'The name of the repository.'
        default: ${{ github.repository }}
      repository-version:
        required: false
        type: string
        description: 'The version number.'
        default: "0.1.0"
      dependencies-list:
        description: "List of packages dependencies."
        required: true
        type: string
        default: ""

defaults:
  run:
    shell: bash

jobs:
  job:
    runs-on: ubuntu-22.04
    steps:
      - name: list publish artifact
        shell: bash
        run: |
          echo "package ${{ inputs.repository-package }}"
          echo "version ${{ inputs.repository-version }}"
          echo "list ${{ inputs.dependencies-list }}"


      - name: install dependencies
        run: |
          set -x
          dependencies_list_escaped=$(echo -e "${{ inputs.dependencies-list }}" | tr '\n' ' ')
          dependencies_install=$(echo "sudo apt-get install -y $dependencies_list_escaped ")
          apt_install_command="${dependencies_install//\'}"
          sudo apt-get update -y | true && $apt_install_command


      # - name: clone colmap repository
      #   run: |
      #     git config --global advice.detachedHead false
      #     COMMAND=$(echo "git clone -b 3.7 https://github.com/colmap/colmap.git colmap")
      #     echo " Downloading: $COMMAND"
      #     $COMMAND

      # - name: configure and build
      #   run: |
      #     set -x
      #     cmake --version
      #     mkdir -p build install
      #     echo $(ls -1)
      #     cd build
      #     cmake ../colmap \
      #       -GNinja \
      #       -DCMAKE_BUILD_TYPE=Release \
      #       -DCMAKE_INSTALL_PREFIX=./install \
      #       -DCMAKE_CUDA_ARCHITECTURES=50 \
      #       -DTESTS_ENABLED=OFF \
      #       -DCUDA_ENABLED=false \
      #       -DGUI_ENABLED=false \
      #       -DASAN_ENABLED=false
      #     ninja -k 10000
      #     ninja install

      # - name: compress and publish
      #   run: |
      #     set -x
      #     echo $(pwd)
      #     echo $(ls -1 ./* )
      #     tar -czvf colmap.tar.gz install/

      # - name: Generate Debian control File
      #   uses: Nightwind-Developments/debian-control-file-builder@latest
      #   id: deb-control
      #   with:
      #     config-file: './configuration.json'
      #     deps-file: './dependencies.txt'
      #     output-path: '.'
      #     case-sensitive-keys: 'true'

      # - name: publicar artefato
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: colmap-artifact
      #     path:  colmap.tar.gz
      #     retention-days: 1
      #     overwrite: true
