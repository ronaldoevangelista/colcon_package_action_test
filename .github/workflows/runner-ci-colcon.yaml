# This action builds and tests a ROS or ROS 2 workspace from source.
# https://github.com/marketplace/actions/ros-2-ci-action
# Comments a pull request with the code coverage generated by your tests.
# https://github.com/romeovs/lcov-reporter-action
# https://github.com/marketplace/actions/code-coverage-report

name: runner-ci-colcon
on:
  push:
    branches: ['master']
  pull_request:
 
jobs:
  setup:
    name: Setup ROS Runner CI
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [jammy]
        distro: [humble]
    runs-on: ubuntu-latest

    container:
      image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu }}-latest

    steps:
      - name: Create Workspace Directory
        shell: bash
        run: |
          mkdir -p /__w/ros_ws/src
      - name: Clone Package and Dependencies 
        shell: bash
        run: |
          rm -rf /tmp/dependencies.repos
          curl -H \
            "Authorization: token  ${{ secrets.GITHUB_TOKEN }}" \
            https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/dependencies.repo \
            -o /tmp/dependencies.repos
            echo $(cat /tmp/dependencies.repos)
      - name: Processing Dependencies
        shell: bash
        run: |
          AWK_OUTPUT=$(awk '/url:/ {printf "%s,", $2}' /tmp/dependencies.repos)
          echo "AWK_OUTPUT=$AWK_OUTPUT" >> $GITHUB_ENV
      - name: Mapping URLS and Clone Packages
        working-directory: /__w/ros_ws/src
        shell: bash
        run: |
          IFS=','
          read -ra TOKENS <<< ${{ env.AWK_OUTPUT }}
          for module_name in ${TOKENS[@]}
            do
             PACKAGE=$(echo ${module_name} | sed 's#https://github.com/${{ github.repository_owner }}/##')
             REPOSITORY_NAME=$(echo $PACKAGE | sed 's/\.git$//')
             PACKAGE_NAME=$(echo "$REPOSITORY_NAME" | sed 's/npd-br-jiro-//; s/-/_/g')
             git clone https://oauth2:${{ secrets.PAT_GITHUB_TOKEN }}@github.com/${{ github.repository_owner }}/${REPOSITORY_NAME}.git $PACKAGE_NAME
          done
      - name: Test
        working-directory: /__w/ros_ws/src
        shell: bash     
        run: |
          echo ${{ env.AWK_OUTPUT }}
          echo "$(ls -laF ./*)"
      - uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.distro }}             
      - name: rosdep update
        working-directory: /__w/ros_ws
        shell: bash
        run: |
          rosdep update
      - name: Running Colcon Build
        working-directory:  /__w/ros_ws/
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          package_path=$(colcon list --paths-only --packages-up-to colcon_package_action_test)
          echo $package_path
          rosdep install -r --from-paths $package_path --ignore-src --skip-keys 'rti-connext-dds-5.3.1 ' --rosdistro  ${{ matrix.distro }} -y
          colcon build --packages-select 4package_path \
              --cmake-args \
              -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage --coverage" \
              -DCMAKE_C_FLAGS="-fprofile-arcs -ftest-coverage --coverage" \
              -DCMAKE_BUILD_TYPE="Debug"

          
