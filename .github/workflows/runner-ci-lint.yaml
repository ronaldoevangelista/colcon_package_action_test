# This file configures a set of analyzers, which statically check code and configuration files
# using the following tools copyright, cppcheck, cpplint, gtest, lint_cmake, linter, uncrustify,
# xmllint. These tools look for formation errors, patterns and other warnings.
#
# Checkout This action checks-out your repository under $GITHUB_WORKSPACE,
# so your workflow can access it.
# https://github.com/actions/checkout
# https://github.com/marketplace/actions/checkout
#
# ROS 2 Tooling Working Group
# Github action to run linters on ROS 2 packages
# https://github.com/ros-tooling/action-ros-lint
# rostooling/setup-ros-docker:ubuntu-jammy-ros-humble-desktop-latest
# https://github.com/ros-tooling/setup-ros-docker
# https://hub.docker.com/r/rostooling/setup-ros-docker/tags

name: action-lint

on:
  workflow_call:
    secrets:
      SECRET_GITHUB_TOKEN:
        description: ''
        required: true
    inputs:
      repository-name:
        required: true
        type: string
        description: ''
        default: ${{ github.repository }}
      package-name:
        required: true
        type: string
        description: ''
        default: ''
      lint-list:
        required: true
        type: string
        description: ''
        default: ''
defaults:
  run:
    shell: bash

env:
  AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS: true

jobs:
  convert-lint-list:
    runs-on: ubuntu-latest
    outputs:
      lint-list: ${{ steps.convert-lint-list.outputs.github-lint-list-env }}
    steps:
    - name: Convert lint-list string to array
      id: convert-lint-list
      run: |
        IFS=', ' read -ra linterarray <<< "${{ inputs.lint-list }}"
        echo $linterarray
        LINT_LIST=$(echo "{\"linters\": [\"${{ inputs.lint-list }}\"]}" | jq -c -r '.linters | join(",")')
        echo "github-lint-list-env=${linterarray[@]}" >> $GITHUB_OUTPUT
    - name: print lint-list string to array
      run: |
        echo ${{ steps.convert-lint-list.outputs.github-lint-list-env }}
        echo $linter-array

  ament_lint_general:
    name: ament_${{ matrix.linter }}
    needs: convert-lint-list
    strategy:
      fail-fast: false
      matrix:
        linter:  ${{ needs.convert-lint-list.outputs.lint-list }}
        distro:  [humble]
        ubuntu:  [jammy]
        package: ["${{ inputs.package-name }}"]
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu }}-latest
    steps:
    -
      if: ${{ matrix.linter == 'cpplint' || matrix.linter == 'uncrustify' }}
      name: Set env ${{ matrix.linter }}
      run: |
          echo "LINT_ARGUMENTS=--linelength=120" >> $GITHUB_ENV

    - uses: actions/checkout@v3
    - uses: ros-tooling/setup-ros@0.6.0
    - uses: ros-tooling/action-ros-lint@master
      with:
        linter: ${{ matrix.linter }}
        distribution: ${{ matrix.distro }}
        package-name: ${{ matrix.package }}
        arguments: ${{ env.LINT_ARGUMENTS }}
